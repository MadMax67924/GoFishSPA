name: 🚀 Deploy GoFish SPA

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Job 1: Probar que todo funciona
  test:
    name: 🧪 Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
        
    - name: 📋 Install dependencies
      working-directory: ./frontend
      run: npm install
      
    - name: 🔍 Run linting
      working-directory: ./frontend
      run: npm run lint
      
    - name: 🏗️ Test build
      working-directory: ./frontend
      run: npm run build

  # Job 2: Deploy usando Vercel CLI
  deploy:
    name: 🚀 Deploy to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Permisos necesarios para GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # Solo un deployment a la vez
    concurrency:
      group: "pages"
      cancel-in-progress: false
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
        
    - name: 📋 Install dependencies
      working-directory: ./frontend
      run: npm install
      
    - name: 🏗️ Build for production
      working-directory: ./frontend
      run: |
        npm run build
        touch ./out/.nojekyll
      env:
        NODE_ENV: production
        
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📦 Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend/out'
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: 🩺 Post-deployment health check
      run: |
        echo "🔍 Esperando a que el sitio esté disponible..."
        sleep 30
        echo "✅ Deployment completado"
        echo "🌐 Sitio disponible en: ${{ steps.deployment.outputs.page_url }}"